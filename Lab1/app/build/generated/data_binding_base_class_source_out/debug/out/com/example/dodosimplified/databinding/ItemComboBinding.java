// Generated by view binder compiler. Do not edit!
package com.example.dodosimplified.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dodosimplified.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemComboBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView comboDescription;

  @NonNull
  public final ImageView comboImage;

  @NonNull
  public final TextView comboSize;

  @NonNull
  public final TextView comboTitle;

  @NonNull
  public final TextView price;

  private ItemComboBinding(@NonNull LinearLayout rootView, @NonNull TextView comboDescription,
      @NonNull ImageView comboImage, @NonNull TextView comboSize, @NonNull TextView comboTitle,
      @NonNull TextView price) {
    this.rootView = rootView;
    this.comboDescription = comboDescription;
    this.comboImage = comboImage;
    this.comboSize = comboSize;
    this.comboTitle = comboTitle;
    this.price = price;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemComboBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemComboBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_combo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemComboBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comboDescription;
      TextView comboDescription = ViewBindings.findChildViewById(rootView, id);
      if (comboDescription == null) {
        break missingId;
      }

      id = R.id.comboImage;
      ImageView comboImage = ViewBindings.findChildViewById(rootView, id);
      if (comboImage == null) {
        break missingId;
      }

      id = R.id.comboSize;
      TextView comboSize = ViewBindings.findChildViewById(rootView, id);
      if (comboSize == null) {
        break missingId;
      }

      id = R.id.comboTitle;
      TextView comboTitle = ViewBindings.findChildViewById(rootView, id);
      if (comboTitle == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = ViewBindings.findChildViewById(rootView, id);
      if (price == null) {
        break missingId;
      }

      return new ItemComboBinding((LinearLayout) rootView, comboDescription, comboImage, comboSize,
          comboTitle, price);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
